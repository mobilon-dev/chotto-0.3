/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * 
 * –í –≤–∞—à–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ –∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:
 * ```ts
 * import { testChatsValidation } from '@/apps/validators/test';
 * testChatsValidation();
 * ```
 */

import { chats } from '../data/chats';
import { validateChats, getValidationReport } from './chats/chatValidator';

/**
 * –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤ –∏ –≤—ã–≤–µ—Å—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
 */
export function testChatsValidation() {
  console.log('üîç –ó–∞–ø—É—Å–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤...\n');

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
  const result = validateChats(chats);
  const report = getValidationReport(result);

  console.log(report);

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
  console.log(`–í—Å–µ–≥–æ —á–∞—Ç–æ–≤: ${chats.length}`);
  console.log(`–í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞: ${result.isValid ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
  console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫: ${result.errors.length}`);
  console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${result.warnings.length}`);

  if (result.errors.length > 0) {
    console.log('\nüî¥ –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫:');
    result.errors.forEach((error, index) => {
      console.log(`\n${index + 1}. –ü—É—Ç—å: ${error.path}`);
      console.log(`   –°–æ–æ–±—â–µ–Ω–∏–µ: ${error.message}`);
      if (error.value !== undefined) {
        console.log(`   –ó–Ω–∞—á–µ–Ω–∏–µ: ${JSON.stringify(error.value, null, 2)}`);
      }
    });
  }

  if (result.warnings.length > 0) {
    console.log('\n‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:');
    result.warnings.forEach((warning, index) => {
      console.log(`${index + 1}. [${warning.path}] ${warning.message}`);
    });
  }

  return result;
}

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤
 */
export function testCustomChats(customChats: any[]) {
  const result = validateChats(customChats);
  console.log(getValidationReport(result));
  return result;
}

/**
 * –ü—Ä–∏–º–µ—Ä –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å –æ—à–∏–±–∫–∞–º–∏ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
 */
export function testWithErrors() {
  const invalidChats = [
    {
      // –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç chatId
      name: '–¢–µ—Å—Ç',
      countUnread: -5,  // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
      lastMessage: 'test',
      'lastActivity.timestamp': 123,  // –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø
    },
    {
      chatId: 1,
      name: 123,  // –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø
      lastMessage: 'test',
      'lastActivity.timestamp': '1727021159',
      'lastMessage.status': 'invalid',  // –ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    },
  ];

  return testCustomChats(invalidChats);
}

