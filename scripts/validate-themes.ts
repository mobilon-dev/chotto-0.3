#!/usr/bin/env tsx

import fs from "fs";
import path from "path";
import { fileURLToPath } from "url";
import { glob } from "glob";

// –í—Å–µ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—ã, —É—Ç–∏–ª–∏—Ç—ã –∏ —Ç–∏–ø—ã –∏–∑ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞
import {
  validateScopedStylesInVueFile,
  validateNoThemeImportsInStyleFiles,
  validateFallbacksInStyleFiles,
  validateNoCSSClassesInThemeFiles,
  validateCSSVariablePrefixes,
  validateComponentThemeInterface,
  getComponentInterface,
  validateForbiddenGlobalVariablesInStyleFiles,
  validateForbiddenGlobalVariablesInThemeFiles,
  validateThemeVariablesInThemeFiles,
  validateThemeUsageInComponents,
  validateNoDataThemeInStyleFiles,
  extractCSSVariablesFromSCSS,
  getGlobalThemeInterfaceVariables,
  validateSingleGlobalTheme,
  log,
  printInvalidResults,
  printStats,
  shouldSkipValidation,
  InterfaceValidationResult,
  PrefixValidationResult,
  ForbiddenVariablesValidationResult,
  ThemeUsageValidationResult,
  DataThemeValidationResult,
  CSSClassesValidationResult,
  ThemeImportsValidationResult,
  FallbackValidationResult,
  ScopedStylesValidationResult,
  GlobalThemeValidationResult,
} from "./validators";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
 */
async function validateAllThemes(): Promise<void> {
  log("üîç –ù–∞—á–∏–Ω–∞—é –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ç–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...", "cyan");
  log("");

  // 0. –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã (src/themes/*/vars.scss) –ø—Ä–æ—Ç–∏–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ src/themes/types.ts
  const globalInterfaceVars = getGlobalThemeInterfaceVariables();
  const globalThemeResults: GlobalThemeValidationResult[] = [];
  if (globalInterfaceVars.length === 0) {
    log(
      "‚ö†Ô∏è  –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç (src/themes/types.ts)",
      "yellow"
    );
  } else {
    const globalVarsPaths = await glob("src/themes/*/vars.scss");
    if (globalVarsPaths.length === 0) {
      log(
        "‚ö†Ô∏è  –§–∞–π–ª—ã –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Ç–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–æ–∂–∏–¥–∞–ª–∏—Å—å src/themes/*/vars.scss)",
        "yellow"
      );
    }
    for (const themeVarsPath of globalVarsPaths) {
      const res = validateSingleGlobalTheme(themeVarsPath, globalInterfaceVars);
      globalThemeResults.push(res);
      if (res.isValid) {
        log(
          `‚úÖ –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ç–µ–º–∞ ${res.themeFolder}/vars.scss: –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å OK`,
          "green"
        );
      } else {
        log(
          `‚ùå –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ç–µ–º–∞ ${res.themeFolder}/vars.scss: ${res.errors.join(
            "; "
          )}`,
          "red"
        );
      }
    }
    log("");
  }

  // –ù–∞—Ö–æ–¥–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ: –ª—é–±–∞—è –ø–∞–ø–∫–∞ –≤–Ω—É—Ç—Ä–∏ src/components/**, –≤ –∫–æ—Ç–æ—Ä–æ–π –µ—Å—Ç—å –ø–æ–¥–ø–∞–ø–∫–∞ styles
  // –ò—Å–∫–ª—é—á–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–ª—É–∂–µ–±–Ω—ã–µ –ø–æ–¥–ø–∞–ø–∫–∏ (styles, stories, themes) –∫–∞–∫ —Å–∞–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
  const allPaths = await glob("src/components/**");
  const componentPaths = allPaths.filter((p) => {
    const isDirectory = fs.existsSync(p) && fs.statSync(p).isDirectory();
    if (!isDirectory) return false;
    const pathParts = p.split("/");
    const name = pathParts[pathParts.length - 1];
    // –ò—Å–∫–ª—é—á–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ –ø–∞–ø–∫–∏ —Å–∞–º–∏ –ø–æ —Å–µ–±–µ
    if (["styles", "stories", "themes"].includes(name)) return false;
    // –°—á–∏—Ç–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º —Ç–æ–ª—å–∫–æ –ø–∞–ø–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –µ—Å—Ç—å –ø–æ–¥–ø–∞–ø–∫–∞ styles
    const stylesDir = `${p}/styles`;
    return fs.existsSync(stylesDir) && fs.statSync(stylesDir).isDirectory();
  });

  const interfaceResults: InterfaceValidationResult[] = [];
  const prefixResults: PrefixValidationResult[] = [];
  const forbiddenResults: ForbiddenVariablesValidationResult[] = [];
  const themeUsageResults: ThemeUsageValidationResult[] = [];
  const dataThemeResults: DataThemeValidationResult[] = [];
  const cssClassesResults: CSSClassesValidationResult[] = [];
  const themeImportsResults: ThemeImportsValidationResult[] = [];
  const fallbackResults: FallbackValidationResult[] = [];
  const scopedStylesResults: ScopedStylesValidationResult[] = [];

  for (const componentPath of componentPaths) {
    const componentName = path.basename(componentPath);
    const componentFolder = path.basename(path.dirname(componentPath));
    const typesPath = path.join(componentPath, "styles", "types.ts");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª —Å—Ç–∏–ª–µ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ (–¥–ª—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤)
    const stylePath = path.join(
      componentPath,
      "styles",
      `${componentName}.scss`
    );
    // –ü—É—Ç—å –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É .vue —Ñ–∞–π–ª—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    const vueFilePath = path.join(componentPath, `${componentName}.vue`);
    if (fs.existsSync(stylePath)) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞
      if (shouldSkipValidation(stylePath)) {
        log(
          `   ‚è≠Ô∏è  style.scss: –ø—Ä–æ–ø—É—â–µ–Ω (–Ω–∞–π–¥–µ–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏—Å–∫–ª—é—á–µ–Ω–∏—è)`,
          "yellow"
        );
      } else {
        // 3. –í–∞–ª–∏–¥–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª–∞—Ö —Å—Ç–∏–ª–µ–π
        const forbiddenStyleResult =
          validateForbiddenGlobalVariablesInStyleFiles(
            componentName,
            componentFolder,
            stylePath
          );
        forbiddenResults.push(forbiddenStyleResult);

        // 4. –í–∞–ª–∏–¥–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–∞–∑–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–µ–º—ã
        const themeUsageResult = validateThemeUsageInComponents(
          componentName,
          componentFolder,
          stylePath
        );
        themeUsageResults.push(themeUsageResult);

        // 5. –í–∞–ª–∏–¥–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è data-theme –≤ —Ñ–∞–π–ª–∞—Ö —Å—Ç–∏–ª–µ–π
        const dataThemeResult = validateNoDataThemeInStyleFiles(
          componentName,
          componentFolder,
          stylePath
        );
        dataThemeResults.push(dataThemeResult);

        // 7. –í–∞–ª–∏–¥–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤ —Ç–µ–º –≤ —Ñ–∞–π–ª–∞—Ö —Å—Ç–∏–ª–µ–π
        const themeImportsResult = validateNoThemeImportsInStyleFiles(
          componentName,
          componentFolder,
          stylePath
        );
        themeImportsResults.push(themeImportsResult);

        // 8. –í–∞–ª–∏–¥–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ–æ–ª–ª–±–µ–∫–æ–≤ –≤ SCSS —Ñ–∞–π–ª–∞—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        const fallbackResult = validateFallbacksInStyleFiles(
          componentName,
          componentFolder,
          stylePath
        );
        fallbackResults.push(fallbackResult);

        if (!forbiddenStyleResult.isValid) {
          log(
            `   ‚ùå  style.scss: ${forbiddenStyleResult.errors.join("; ")}`,
            "red"
          );
        }

        if (!themeUsageResult.isValid) {
          log(
            `   ‚ö†Ô∏è  style.scss: ${themeUsageResult.errors.join("; ")}`,
            "yellow"
          );
        }

        if (!dataThemeResult.isValid) {
          log(`   ‚ùå  style.scss: ${dataThemeResult.errors.join("; ")}`, "red");
        }

        if (!themeImportsResult.isValid) {
          log(
            `   ‚ùå  style.scss: ${themeImportsResult.errors.join("; ")}`,
            "red"
          );
        }

        if (!fallbackResult.isValid) {
          log(`   ‚ùå  style.scss: ${fallbackResult.errors.join("; ")}`, "red");
        }
      }
    }

    // 9. –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞–ª–∏—á–∏—è scoped —Å—Ç–∏–ª–µ–π –≤ –æ—Å–Ω–æ–≤–Ω–æ–º .vue —Ñ–∞–π–ª–µ
    const scopedStylesResult = validateScopedStylesInVueFile(
      componentName,
      componentFolder,
      vueFilePath
    );
    scopedStylesResults.push(scopedStylesResult);
    if (!scopedStylesResult.isValid) {
      log(
        `   ‚ùå  ${scopedStylesResult.vueFile}: ${scopedStylesResult.errors.join(
          "; "
        )}`,
        "red"
      );
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª types.ts
    if (!fs.existsSync(typesPath)) {
      log(`‚ö†Ô∏è  –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ${componentName}: —Ñ–∞–π–ª types.ts –Ω–µ –Ω–∞–π–¥–µ–Ω`, "yellow");
      continue;
    }

    // –ü–æ–ª—É—á–∞–µ–º –æ–∂–∏–¥–∞–µ–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    const expectedVariables = getComponentInterface(componentPath);

    if (expectedVariables.length === 0) {
      log(
        `‚ö†Ô∏è  –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ${componentName}: –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç`,
        "yellow"
      );
      continue;
    }

    log(`üìã –ü—Ä–æ–≤–µ—Ä—è—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: ${componentName}`, "blue");
    log(`   –û–∂–∏–¥–∞–µ–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: ${expectedVariables.length}`, "blue");

    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ç–µ–º—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    const normalizedPath = componentPath.replace(/\\/g, "/");
    const themePaths = await glob(`${normalizedPath}/styles/themes/*.scss`);

    for (const themePath of themePaths) {
      const themeName = path.basename(themePath, ".scss");

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞ —Ç–µ–º—ã
      if (shouldSkipValidation(themePath)) {
        log(
          `   ‚è≠Ô∏è  ${themeName}: –ø—Ä–æ–ø—É—â–µ–Ω (–Ω–∞–π–¥–µ–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏—Å–∫–ª—é—á–µ–Ω–∏—è)`,
          "yellow"
        );
        continue;
      }

      // 1. –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
      const interfaceResult = validateComponentThemeInterface(
        componentName,
        componentFolder,
        themePath,
        expectedVariables
      );
      interfaceResults.push(interfaceResult);

      // 2. –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
      const prefixResult = validateCSSVariablePrefixes(
        componentName,
        componentFolder,
        themePath
      );
      prefixResults.push(prefixResult);

      // 3. –í–∞–ª–∏–¥–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª–∞—Ö —Ç–µ–º (—Ä–∞–∑—Ä–µ—à–µ–Ω—ã)
      const forbiddenResult = validateForbiddenGlobalVariablesInThemeFiles(
        componentName,
        componentFolder,
        themePath
      );
      forbiddenResults.push(forbiddenResult);

      // 3.1. –í–∞–ª–∏–¥–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª–∞—Ö —Ç–µ–º
      const themeVariablesResult = validateThemeVariablesInThemeFiles(
        componentName,
        componentFolder,
        themePath
      );
      forbiddenResults.push(themeVariablesResult);

      // 6. –í–∞–ª–∏–¥–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è CSS –∫–ª–∞—Å—Å–æ–≤ –≤ —Ñ–∞–π–ª–∞—Ö —Ç–µ–º
      const cssClassesResult = validateNoCSSClassesInThemeFiles(
        componentName,
        componentFolder,
        themePath
      );
      cssClassesResults.push(cssClassesResult);

      if (
        interfaceResult.isValid &&
        prefixResult.isValid &&
        forbiddenResult.isValid &&
        themeVariablesResult.isValid &&
        cssClassesResult.isValid
      ) {
        log(
          `   ‚úÖ ${themeName}: –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å OK, –ø—Ä–µ—Ñ–∏–∫—Å—ã OK, –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ OK, –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ–º OK, CSS –∫–ª–∞—Å—Å—ã OK`,
          "green"
        );
      } else {
        const allErrors = [
          ...interfaceResult.errors,
          ...prefixResult.errors,
          ...forbiddenResult.errors,
          ...themeVariablesResult.errors,
          ...cssClassesResult.errors,
        ];
        log(`   ‚ùå ${themeName}: ${allErrors.join("; ")}`, "red");
      }
    }

    log("");
  }

  // –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  const allResults = [
    ...interfaceResults,
    ...prefixResults,
    ...forbiddenResults,
    ...themeUsageResults,
    ...dataThemeResults,
    ...cssClassesResults,
    ...themeImportsResults,
    ...fallbackResults,
    ...scopedStylesResults,
  ];
  const validResults = allResults.filter((r) => r.isValid);
  const invalidResults = allResults.filter((r) => !r.isValid);

  const totalGlobal = globalThemeResults.length;
  const validGlobal = globalThemeResults.filter((r) => r.isValid).length;
  const invalidGlobal = totalGlobal - validGlobal;
  printStats(
    interfaceResults.length,
    validResults.length,
    invalidResults.length,
    globalInterfaceVars.length > 0
      ? { total: totalGlobal, valid: validGlobal, invalid: invalidGlobal }
      : undefined
  );

  if (invalidResults.length > 0 || globalThemeResults.some((r) => !r.isValid)) {
    printInvalidResults(
      invalidResults as any,
      globalThemeResults.filter((r) => !r.isValid)
    );
    process.exit(1);
  } else {
    log("", "reset");
    log("üéâ –í—Å–µ —Ç–µ–º—ã –≤–∞–ª–∏–¥–Ω—ã!", "green");
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
validateAllThemes().catch((error) => {
  log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: ${error}`, "red");
  process.exit(1);
});

export {
  validateAllThemes,
  extractCSSVariablesFromSCSS,
  validateComponentThemeInterface,
  validateCSSVariablePrefixes,
  validateForbiddenGlobalVariablesInStyleFiles,
  validateForbiddenGlobalVariablesInThemeFiles,
  validateThemeVariablesInThemeFiles,
  validateThemeUsageInComponents,
  validateNoDataThemeInStyleFiles,
  validateNoCSSClassesInThemeFiles,
  validateNoThemeImportsInStyleFiles,
  validateFallbacksInStyleFiles,
  shouldSkipValidation,
};